; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; AUTOMATICALLY GENERATED CODE, DO NOT MODIFY
; UNLESS YOU REALLY, REALLY, REALLY MEAN IT !!
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; Code generated by : Dev-Object - V2.2.5
; Project name : Dev-Board
; File name : DevBoard - Card.pb
; File Version : 1.0.0
; Programmation : OK
; Programmed by : Guillaume Saumure
; AKA : StarBootics
; E-mail : gsaumure@cgocable.ca
; Creation Date : June 19th, 2024
; Last update : June 19th, 2024
; Coded for PureBasic : V6.11 LTS
; Platform : Windows, Linux, MacOS X
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; This is free and unencumbered software released into the public domain.
; 
; Anyone is free to copy, modify, publish, use, compile, sell, or
; distribute this software, either in source code form or as a compiled
; binary, for any purpose, commercial or non-commercial, and by any
; means.
; 
; In jurisdictions that recognize copyright laws, the author or authors
; of this software dedicate any and all copyright interest in the
; software to the public domain. We make this dedication for the benefit
; of the public at large and to the detriment of our heirs and
; successors. We intend this dedication to be an overt act of
; relinquishment in perpetuity of all present and future rights to this
; software under copyright law.
; 
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
; IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
; OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
; ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
; OTHER DEALINGS IN THE SOFTWARE.
; 
; For more information, please refer to <http://unlicense.org/>
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

DeclareModule Card
  
  Interface Card
    
    GetTitle.s()
    GetDescription.s()
    GetUUID.s()
    GetCreatedDate.l()
    GetCompletedDate.l()
    GetAbandonedDate.l()
    GetArchivedDate.l()
    GetTrashedDate.l()
    SetTitle(Title.s)
    SetDescription(Description.s)
    SetUUID(UUID.s)
    SetCreatedDate(CreatedDate.l)
    SetCompletedDate(CompletedDate.l)
    SetAbandonedDate(AbandonedDate.l)
    SetArchivedDate(ArchivedDate.l)
    SetTrashedDate(TrashedDate.l)
    Copy.i()
    XML_AddAttribute(CurrentNode.i)
    XML_CollectAttribute(CurrentNode.i)
    Free()
    
  EndInterface
  
  ; Declare Free(*This)
  Declare.i New(Title.s = "", Description.s = "", UUID.s = "", CreatedDate.l = 0, CompletedDate.l = 0, AbandonedDate.l = 0, ArchivedDate.l = 0, TrashedDate.l = 0)
  
EndDeclareModule

Module Card
  
  DisableDebugger
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Structure declaration <<<<<

  Structure Private_Members
    
    VirtualTable.i
    Title.s
    Description.s
    UUID.s
    CreatedDate.l
    CompletedDate.l
    AbandonedDate.l
    ArchivedDate.l
    TrashedDate.l
    
  EndStructure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The observators <<<<<

  Procedure.s GetTitle(*This.Private_Members)
    
    ProcedureReturn *This\Title
  EndProcedure
  
  Procedure.s GetDescription(*This.Private_Members)
    
    ProcedureReturn *This\Description
  EndProcedure
  
  Procedure.s GetUUID(*This.Private_Members)
    
    ProcedureReturn *This\UUID
  EndProcedure
  
  Procedure.l GetCreatedDate(*This.Private_Members)
    
    ProcedureReturn *This\CreatedDate
  EndProcedure
  
  Procedure.l GetCompletedDate(*This.Private_Members)
    
    ProcedureReturn *This\CompletedDate
  EndProcedure
  
  Procedure.l GetAbandonedDate(*This.Private_Members)
    
    ProcedureReturn *This\AbandonedDate
  EndProcedure
  
  Procedure.l GetArchivedDate(*This.Private_Members)
    
    ProcedureReturn *This\ArchivedDate
  EndProcedure
  
  Procedure.l GetTrashedDate(*This.Private_Members)
    
    ProcedureReturn *This\TrashedDate
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The mutators <<<<<

  Procedure SetTitle(*This.Private_Members, Title.s)
    
    *This\Title = Title
    
  EndProcedure
  
  Procedure SetDescription(*This.Private_Members, Description.s)
    
    *This\Description = Description
    
  EndProcedure
  
  Procedure SetUUID(*This.Private_Members, UUID.s)
    
    *This\UUID = UUID
    
  EndProcedure
  
  Procedure SetCreatedDate(*This.Private_Members, CreatedDate.l)
    
    *This\CreatedDate = CreatedDate
    
  EndProcedure
  
  Procedure SetCompletedDate(*This.Private_Members, CompletedDate.l)
    
    *This\CompletedDate = CompletedDate
    
  EndProcedure
  
  Procedure SetAbandonedDate(*This.Private_Members, AbandonedDate.l)
    
    *This\AbandonedDate = AbandonedDate
    
  EndProcedure
  
  Procedure SetArchivedDate(*This.Private_Members, ArchivedDate.l)
    
    *This\ArchivedDate = ArchivedDate
    
  EndProcedure
  
  Procedure SetTrashedDate(*This.Private_Members, TrashedDate.l)
    
    *This\TrashedDate = TrashedDate
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Copy operator <<<<<

  Procedure.i Copy(*This.Private_Members)
    
    *Copy.Private_Members = AllocateStructure(Private_Members)
    
    CopyStructure(*This, *Copy, Private_Members)
    
    ProcedureReturn *Copy
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< XML Add Attributes <<<<<

  Procedure XML_AddAttribute(*This.Private_Members, CurrentNode.i)
    
    SetXMLAttribute(CurrentNode, "Title", *This\Title)
    SetXMLAttribute(CurrentNode, "Description", *This\Description)
    SetXMLAttribute(CurrentNode, "UUID", *This\UUID)
    SetXMLAttribute(CurrentNode, "CreatedDate", Str(*This\CreatedDate))
    SetXMLAttribute(CurrentNode, "CompletedDate", Str(*This\CompletedDate))
    SetXMLAttribute(CurrentNode, "AbandonedDate", Str(*This\AbandonedDate))
    SetXMLAttribute(CurrentNode, "ArchivedDate", Str(*This\ArchivedDate))
    SetXMLAttribute(CurrentNode, "TrashedDate", Str(*This\TrashedDate))
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< XML Collect Attributes <<<<<

  Procedure XML_CollectAttribute(*This.Private_Members, CurrentNode.i)
    
    *This\Title = GetXMLAttribute(CurrentNode, "Title")
    *This\Description = GetXMLAttribute(CurrentNode, "Description")
    *This\UUID = GetXMLAttribute(CurrentNode, "UUID")
    *This\CreatedDate = Val(GetXMLAttribute(CurrentNode, "CreatedDate"))
    *This\CompletedDate = Val(GetXMLAttribute(CurrentNode, "CompletedDate"))
    *This\AbandonedDate = Val(GetXMLAttribute(CurrentNode, "AbandonedDate"))
    *This\ArchivedDate = Val(GetXMLAttribute(CurrentNode, "ArchivedDate"))
    *This\TrashedDate = Val(GetXMLAttribute(CurrentNode, "TrashedDate"))
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Destructor <<<<<

  Procedure Free(*This.Private_Members)
    
    FreeStructure(*This)
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Constructor <<<<<

  Procedure.i New(Title.s = "", Description.s = "", UUID.s = "", CreatedDate.l = 0, CompletedDate.l = 0, AbandonedDate.l = 0, ArchivedDate.l = 0, TrashedDate.l = 0)
    
    *This.Private_Members = AllocateStructure(Private_Members)
    *This\VirtualTable = ?START_METHODS
    
    *This\Title = Title
    *This\Description = Description
    *This\UUID = UUID
    *This\CreatedDate = CreatedDate
    *This\CompletedDate = CompletedDate
    *This\AbandonedDate = AbandonedDate
    *This\ArchivedDate = ArchivedDate
    *This\TrashedDate = TrashedDate
    
    ProcedureReturn *This
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Virtual Table Entries <<<<<

  DataSection
    START_METHODS:
    Data.i @GetTitle()
    Data.i @GetDescription()
    Data.i @GetUUID()
    Data.i @GetCreatedDate()
    Data.i @GetCompletedDate()
    Data.i @GetAbandonedDate()
    Data.i @GetArchivedDate()
    Data.i @GetTrashedDate()
    Data.i @SetTitle()
    Data.i @SetDescription()
    Data.i @SetUUID()
    Data.i @SetCreatedDate()
    Data.i @SetCompletedDate()
    Data.i @SetAbandonedDate()
    Data.i @SetArchivedDate()
    Data.i @SetTrashedDate()
    Data.i @Copy()
    Data.i @XML_AddAttribute()
    Data.i @XML_CollectAttribute()
    Data.i @Free()
    END_METHODS:
  EndDataSection

  EnableDebugger
  
EndModule

; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; <<<<< Code generated in : 00.001 seconds (297000.00 lines/second) <<<<<
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

; <<<<<<<<<<<<<<<<<<<<<<<
; <<<<< END OF FILE <<<<<
; <<<<<<<<<<<<<<<<<<<<<<<
; IDE Options = PureBasic 6.11 LTS (Linux - x64)
; Folding = -----
; EnableXP
; CompileSourceDirectory