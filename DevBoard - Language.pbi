; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; AUTOMATICALLY GENERATED CODE, DO NOT MODIFY
; UNLESS YOU REALLY, REALLY, REALLY MEAN IT !!
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; Code generated by : Dev-Object - V2.2.5
; Project name : Dev-Board
; File name : DevBoard - Language.pbi
; File Version : 1.0.0
; Programmation : OK
; Programmed by : Guillaume Saumure
; AKA : StarBootics
; E-mail : gsaumure@cgocable.ca
; Creation Date : June 21st, 2024
; Last update : June 21st, 2024
; Coded for PureBasic : V6.11 LTS
; Platform : Windows, Linux, MacOS X
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; This is free and unencumbered software released into the public domain.
; 
; Anyone is free to copy, modify, publish, use, compile, sell, or
; distribute this software, either in source code form or as a compiled
; binary, for any purpose, commercial or non-commercial, and by any
; means.
; 
; In jurisdictions that recognize copyright laws, the author or authors
; of this software dedicate any and all copyright interest in the
; software to the public domain. We make this dedication for the benefit
; of the public at large and to the detriment of our heirs and
; successors. We intend this dedication to be an overt act of
; relinquishment in perpetuity of all present and future rights to this
; software under copyright law.
; 
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
; IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
; OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
; ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
; OTHER DEALINGS IN THE SOFTWARE.
; 
; For more information, please refer to <http://unlicense.org/>
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

DeclareModule Language
  
  Enumeration
    #PROGRAM_NAME ; 0
    #BOARD_IDEAS_TODO
    #BOARD_IN_PROGRESS
    #BOARD_COMPLETED
    #BOARD_ABANDONED
    #BOARD_ARCHIVE ; 5
    #BOARD_TRASH
    #NEW_PROJECT
    #PROJECT_NAME
    #BUTTON_CREATE
    #BUTTON_ADD ; 10
    #BUTTON_OK
    #BUTTON_CANCEL
    #BUTTON_CLOSE
    #OPEN_PROJECT_REQUESTER_TITLE
    #PROJECT_FILE_FILTER ; 15
    #ADD_CARD_DIALOG_TITLE
    #ADD_EDIT_CARD_CARD_TITLE
    #ADD_EDIT_CARD_CARD_DESCRIPTION
    #EDIT_CARD_DIALOG_TITLE
    #TOOLTIP_NEW_PROJECT ; 20
    #TOOLTIP_OPEN_PROJECT
    #TOOLTIP_SAVE_PROJECT
    #TOOLTIP_OPTIONS
    #TOOLTIP_ADD_CARD
    #TOOLTIP_EDIT_CARD ; 25
    #TOOLTIP_REMOVE_CARD
    #TOOLTIP_MOVE_CARD
    #TOOLTIP_ARCHIVE
    #TOOLTIP_TRASH
    
    #OPTIONS_SETTINGS_DIALOG_TITLE ; 30
    #OPTIONS_SETTINGS_CHOOSE_LANGUAGE
    #OPTIONS_SETTINGS_FONT_COLORS
    #OPTIONS_SETTINGS_FONT_NAME
    #OPTIONS_SETTINGS_FONT_SIZE
    #OPTIONS_SETTINGS_BORDER_COLOR ; 35
    #OPTIONS_SETTINGS_LIST_BACK_COLOR
    #OPTIONS_SETTINGS_CARD_BACK_COLOR
    #OPTIONS_SETTINGS_TEXT_COLOR
    #OPTIONS_SETTINGS_SELECTED_BORDER_COLOR
    #OPTIONS_SETTINGS_FLYOVER_BORDER_COLOR ; 40
    
    #OPTIONS_SETTINGS_AUTOMATIC_CARD_MOVE
    #OPTIONS_SETTINGS_30_DAYS
    #OPTIONS_SETTINGS_60_DAYS
    #OPTIONS_SETTINGS_90_DAYS
    
    #MOVE_CARD_DIALOG_TITLE ; 45
    
    #ARCHIVE_MANAGER_DIALOG_TITLE
    #ARCHIVE_MANAGER_EMPTY_THE_ARCHIVE
    #ARCHIVE_TRASH_MANAGER_DELETE_CARD
    #ARCHIVE_MANAGER_UNARCHIVE_CARD
    
    #TRASH_MANAGER_DIALOG_TITLE ; 50
    #TRASH_MANAGER_EMPTY_THE_TRASH
    #TRASH_MANAGER_RESTORE_CARD
    
    #WARNING_REQUESTER_TITLE 
    #ASK_SEND_TO_TRASH
    #ASK_EMPTY_ARCHIVE ; 55
    #ASK_EMPTY_TRASH
    #ASK_DELETE_CARD_FROM_ARCHIVE
    #ASK_DELETE_CARD_FROM_TRASH 
    
    #LAST_KEY
    
  EndEnumeration
  
  Interface Language
    
    GetPath.s()
    GetLanguageName.s()
    SetPath(Path.s)
    SetLanguageName(LanguageName.s)
    ReadPrefs(GroupName.s)
    WritePrefs(GroupName.s)
    LoadFile()
    Message.s(Key.i)
    Free()
    
  EndInterface
  
  Declare.i New(Path.s, LanguageName.s)
  
EndDeclareModule

Module Language
  
  DisableDebugger
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Structure declaration <<<<<

  Structure Private_Members
    
    VirtualTable.i
    Path.s
    LanguageName.s
    Messages.StringHashMap::StringHashMap
    
  EndStructure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The observators <<<<<

  Procedure.s GetPath(*This.Private_Members)
    
    ProcedureReturn *This\Path
  EndProcedure
  
  Procedure.s GetLanguageName(*This.Private_Members)
    
    ProcedureReturn *This\LanguageName
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The mutators <<<<<

  Procedure SetPath(*This.Private_Members, Path.s)
    
    *This\Path = Path
    
  EndProcedure
  
  Procedure SetLanguageName(*This.Private_Members, LanguageName.s)
    
    *This\LanguageName = LanguageName
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Read preferences group <<<<<

  Procedure ReadPrefs(*This.Private_Members, GroupName.s)
    
    PreferenceGroup(GroupName)
    
    *This\LanguageName = ReadPreferenceString("LanguageName", *This\LanguageName)
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Write preferences group <<<<<

  Procedure WritePrefs(*This.Private_Members, GroupName.s)
    
    PreferenceGroup(GroupName)
    
    WritePreferenceString("LanguageName", *This\LanguageName)
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< XML Get Node with child nodes <<<<<

  Procedure.i XML_GetNode(*This.Private_Members, CurrentNode.i)
    
    If ParentXMLNode(CurrentNode) = #Null
      ObjectNode = ChildXMLNode(CurrentNode)
      If GetXMLNodeName(ObjectNode) = "Language"
        Success.i = #True
      EndIf
    Else
      Success = #True
      ObjectNode = CurrentNode
    EndIf
    
    If Success = #True
      
      FieldNode = ChildXMLNode(ObjectNode)
      
      If GetXMLNodeName(FieldNode) = "Messages"
        
        MaxChild = XMLChildCount(FieldNode)
        
        For MessagesID = 1 To MaxChild
          
          ElementNode = ChildXMLNode(FieldNode, MessagesID)
          
          If GetXMLNodeName(ElementNode) = "Message"
            *This\Messages\AddBucket(Val(GetXMLAttribute(ElementNode, "Key")), GetXMLAttribute(ElementNode, "Text"))
          EndIf
          
        Next
        
      EndIf
      
    EndIf
    
    ProcedureReturn Success
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Load file <<<<<

  Procedure LoadFile(*This.Private_Members)
    
    FileID = LoadXML(#PB_Any, *This\Path + *This\LanguageName + ".xml")
    
    If IsXML(FileID)
      FormatXML(FileID, #PB_XML_CutNewline)
      XML_GetNode(*This, RootXMLNode(FileID))
      FreeXML(FileID)
    EndIf
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Message <<<<<
  
  Procedure.s Message(*This.Private_Members, Key.i)
    
    If *This\Messages\LookUpBucket(Key)
      ProcedureReturn *This\Messages\GetBucketValue()
    EndIf
    
    ProcedureReturn "Missing text (key " + Str(Key) + ")"
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Destructor <<<<<

  Procedure Free(*This.Private_Members)
    
    If *This\Messages <> #Null
      *This\Messages\Free()
    EndIf
    
    FreeStructure(*This)
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Constructor <<<<<

  Procedure.i New(Path.s, LanguageName.s)
    
    *This.Private_Members = AllocateStructure(Private_Members)
    *This\VirtualTable = ?START_METHODS
    
    *This\Path = Path
    *This\LanguageName = LanguageName
    
    *This\Messages = StringHashMap::New(#LAST_KEY * 1.25)
      
    ProcedureReturn *This
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Virtual Table Entries <<<<<

  DataSection
    START_METHODS:
    Data.i @GetPath()
    Data.i @GetLanguageName()
    Data.i @SetPath()
    Data.i @SetLanguageName()
    Data.i @ReadPrefs()
    Data.i @WritePrefs()
    Data.i @LoadFile()
    Data.i @Message()
    Data.i @Free()
    END_METHODS:
  EndDataSection

  EnableDebugger
  
EndModule

; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; <<<<< Code generated in : 00.001 seconds (279000.00 lines/second) <<<<<
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

; <<<<<<<<<<<<<<<<<<<<<<<
; <<<<< END OF FILE <<<<<
; <<<<<<<<<<<<<<<<<<<<<<<
; IDE Options = PureBasic 6.11 LTS (Linux - x64)
; Folding = ---
; EnableXP
; CompileSourceDirectory