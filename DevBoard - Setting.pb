; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; AUTOMATICALLY GENERATED CODE, DO NOT MODIFY
; UNLESS YOU REALLY, REALLY, REALLY MEAN IT !!
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; Code generated by : Dev-Object - V2.2.5
; Project name : Dev-Board
; File name : DevBoard - Setting.pb
; File Version : 1.0.0
; Programmation : OK
; Programmed by : Guillaume Saumure
; AKA : StarBootics
; E-mail : gsaumure@cgocable.ca
; Creation Date : June 17th, 2024
; Last update : June 17th, 2024
; Coded for PureBasic : V6.11 LTS
; Platform : Windows, Linux, MacOS X
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; This is free and unencumbered software released into the public domain.
; 
; Anyone is free to copy, modify, publish, use, compile, sell, or
; distribute this software, either in source code form or as a compiled
; binary, for any purpose, commercial or non-commercial, and by any
; means.
; 
; In jurisdictions that recognize copyright laws, the author or authors
; of this software dedicate any and all copyright interest in the
; software to the public domain. We make this dedication for the benefit
; of the public at large and to the detriment of our heirs and
; successors. We intend this dedication to be an overt act of
; relinquishment in perpetuity of all present and future rights to this
; software under copyright law.
; 
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
; IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
; OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
; ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
; OTHER DEALINGS IN THE SOFTWARE.
; 
; For more information, please refer to <http://unlicense.org/>
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

DeclareModule Setting
  
  Enumeration
    #DeltaTimeSetting_30_Days 
    #DeltaTimeSetting_60_Days 
    #DeltaTimeSetting_90_Days
  EndEnumeration
  
  Interface Setting
    
    GetDeltaTime.l()
    GetDeltaTimeSetting.l()
    GetFontName.s()
    GetFontSize.i()
    GetBorderColor.i()
    GetListBackColor.i()
    GetCardBackColor.i()
    GetTextColor.i()
    GetSelectedBorderColor.i()
    GetFlyOverBorderColor.i()
    SetDeltaTimeSetting(DeltaTimeSetting.l)
    SetFontName(FontName.s)
    SetFontSize(FontSize.i)
    SetBorderColor(BorderColor.i)
    SetListBackColor(ListBackColor.i)
    SetCardBackColor(CardBackColor.i)
    SetTextColor(TextColor.i)
    SetSelectedBorderColor(SelectedBorderColor.i)
    SetFlyOverBorderColor(FlyOverBorderColor.i)
    ReadPrefs(GroupName.s)
    WritePrefs(GroupName.s)
    Free()
    
  EndInterface
  
  Declare.i New()
  
EndDeclareModule

Module Setting
  
  DisableDebugger
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Constants declaration <<<<<
  
  #Delta_Time_30_Days = 2592000
  #Delta_Time_60_Days = 5184000
  #Delta_Time_90_Days = 7776000
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Structure declaration <<<<<

  Structure Private_Members
    
    VirtualTable.i
    DeltaTime.l
    DeltaTimeSetting.l
    FontName.s
    FontSize.i
    BorderColor.l
    ListBackColor.l
    CardBackColor.l
    TextColor.l
    SelectedBorderColor.l
    FlyOverBorderColor.l
    
  EndStructure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The observators <<<<<

  Procedure.l GetDeltaTime(*This.Private_Members)
    
    ProcedureReturn *This\DeltaTime
  EndProcedure
  
  Procedure.l GetDeltaTimeSetting(*This.Private_Members)
    
    ProcedureReturn *This\DeltaTimeSetting
  EndProcedure
  
  Procedure.s GetFontName(*This.Private_Members)
    
    ProcedureReturn *This\FontName
  EndProcedure
  
  Procedure.i GetFontSize(*This.Private_Members)
    
    ProcedureReturn *This\FontSize
  EndProcedure
  
  Procedure.l GetBorderColor(*This.Private_Members)
    
    ProcedureReturn *This\BorderColor
  EndProcedure
  
  Procedure.l GetListBackColor(*This.Private_Members)
    
    ProcedureReturn *This\ListBackColor
  EndProcedure
  
  Procedure.l GetCardBackColor(*This.Private_Members)
    
    ProcedureReturn *This\CardBackColor
  EndProcedure
  
  Procedure.l GetTextColor(*This.Private_Members)
    
    ProcedureReturn *This\TextColor
  EndProcedure
  
  Procedure.l GetSelectedBorderColor(*This.Private_Members)
    
    ProcedureReturn *This\SelectedBorderColor
  EndProcedure
  
  Procedure.l GetFlyOverBorderColor(*This.Private_Members)
    
    ProcedureReturn *This\FlyOverBorderColor
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The mutators <<<<<

  Procedure SetDeltaTimeSetting(*This.Private_Members, DeltaTimeSetting.l)
    
    *This\DeltaTimeSetting = DeltaTimeSetting
    
    Select *This\DeltaTimeSetting
        
      Case #DeltaTimeSetting_30_Days 
        *This\DeltaTime = #Delta_Time_30_Days
        
      Case #DeltaTimeSetting_60_Days 
        *This\DeltaTime = #Delta_Time_60_Days
        
      Case #DeltaTimeSetting_90_Days
        *This\DeltaTime = #Delta_Time_90_Days
        
    EndSelect
    
  EndProcedure
  
  Procedure SetFontName(*This.Private_Members, FontName.s)
    
    *This\FontName = FontName
    
  EndProcedure
  
  Procedure SetFontSize(*This.Private_Members, FontSize.i)
    
    *This\FontSize = FontSize
    
  EndProcedure
  
  Procedure SetBorderColor(*This.Private_Members, BorderColor.l)
    
    *This\BorderColor = BorderColor
    
  EndProcedure
  
  Procedure SetListBackColor(*This.Private_Members, ListBackColor.l)
    
    *This\ListBackColor = ListBackColor
    
  EndProcedure
  
  Procedure SetCardBackColor(*This.Private_Members, CardBackColor.l)
    
    *This\CardBackColor = CardBackColor
    
  EndProcedure
  
  Procedure SetTextColor(*This.Private_Members, TextColor.l)
    
    *This\TextColor = TextColor
    
  EndProcedure
  
  Procedure SetSelectedBorderColor(*This.Private_Members, SelectedBorderColor.l)
    
    *This\SelectedBorderColor = SelectedBorderColor
    
  EndProcedure
  
  Procedure SetFlyOverBorderColor(*This.Private_Members, FlyOverBorderColor.l)
    
    *This\FlyOverBorderColor = FlyOverBorderColor
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Read preferences group <<<<<

  Procedure ReadPrefs(*This.Private_Members, GroupName.s)
    
    PreferenceGroup(GroupName)
    
    *This\DeltaTimeSetting = ReadPreferenceLong("DeltaTimeSetting", *This\DeltaTimeSetting)
    *This\FontName = ReadPreferenceString("FontName", *This\FontName)
    *This\FontSize = ReadPreferenceInteger("FontSize", *This\FontSize)
    
    BorderColorRGB.l = FormatColor::UndoIt(ReadPreferenceString("BorderColor", FormatColor::DoIt(*This\BorderColor, 0)))
    *This\BorderColor = RGBA(Red(BorderColorRGB), Green(BorderColorRGB), Blue(BorderColorRGB), 255)
    
    ListBackColorRGB.l = FormatColor::UndoIt(ReadPreferenceString("ListBackColor", FormatColor::DoIt(*This\ListBackColor, 0)))
    *This\ListBackColor = RGBA(Red(ListBackColorRGB), Green(ListBackColorRGB), Blue(ListBackColorRGB), 255)
    
    CardBackColorRGB.l = FormatColor::UndoIt(ReadPreferenceString("CardBackColor", FormatColor::DoIt(*This\CardBackColor, 0)))
    *This\CardBackColor = RGBA(Red(CardBackColorRGB), Green(CardBackColorRGB), Blue(CardBackColorRGB), 255)
    
    TextColorRGB.l = FormatColor::UndoIt(ReadPreferenceString("TextColor", FormatColor::DoIt(*This\TextColor, 0)))
    *This\TextColor = RGBA(Red(TextColorRGB), Green(TextColorRGB), Blue(TextColorRGB), 255)
    
    SelectedBorderColorRGB.l = FormatColor::UndoIt(ReadPreferenceString("SelectedBorderColor", FormatColor::DoIt(*This\SelectedBorderColor, 0)))
    *This\SelectedBorderColor = RGBA(Red(SelectedBorderColorRGB), Green(SelectedBorderColorRGB), Blue(SelectedBorderColorRGB), 255)
    
    FlyOverBorderColorRGB.l = FormatColor::UndoIt(ReadPreferenceString("FlyOverBorderColor", FormatColor::DoIt(*This\FlyOverBorderColor, 0)))
    *This\FlyOverBorderColor = RGBA(Red(FlyOverBorderColorRGB), Green(FlyOverBorderColorRGB), Blue(FlyOverBorderColorRGB), 255)
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< Write preferences group <<<<<

  Procedure WritePrefs(*This.Private_Members, GroupName.s)
    
    PreferenceGroup(GroupName)
    
    WritePreferenceLong("DeltaTimeSetting", *This\DeltaTimeSetting)
    WritePreferenceString("FontName", *This\FontName)
    WritePreferenceInteger("FontSize", *This\FontSize)
    WritePreferenceString("BorderColor", FormatColor::DoIt(*This\BorderColor, 0)) 
    WritePreferenceString("ListBackColor", FormatColor::DoIt(*This\ListBackColor, 0))
    WritePreferenceString("CardBackColor", FormatColor::DoIt(*This\CardBackColor, 0))
    WritePreferenceString("TextColor", FormatColor::DoIt(*This\TextColor, 0))
    WritePreferenceString("SelectedBorderColor", FormatColor::DoIt(*This\SelectedBorderColor, 0))
    WritePreferenceString("FlyOverBorderColor", FormatColor::DoIt(*This\FlyOverBorderColor, 0))
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Destructor <<<<<

  Procedure Free(*This.Private_Members)
    
    FreeStructure(*This)
    
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Constructor <<<<<

  Procedure.i New()
    
    *This.Private_Members = AllocateStructure(Private_Members)
    *This\VirtualTable = ?START_METHODS
    
    ProcedureReturn *This
  EndProcedure
  
  ; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
  ; <<<<< The Virtual Table Entries <<<<<

  DataSection
    START_METHODS:
    Data.i @GetDeltaTime()
    Data.i @GetDeltaTimeSetting()
    Data.i @GetFontName()
    Data.i @GetFontSize()
    Data.i @GetBorderColor()
    Data.i @GetListBackColor()
    Data.i @GetCardBackColor()
    Data.i @GetTextColor()
    Data.i @GetSelectedBorderColor()
    Data.i @GetFlyOverBorderColor()
    Data.i @SetDeltaTimeSetting()
    Data.i @SetFontName()
    Data.i @SetFontSize()
    Data.i @SetBorderColor()
    Data.i @SetListBackColor()
    Data.i @SetCardBackColor()
    Data.i @SetTextColor()
    Data.i @SetSelectedBorderColor()
    Data.i @SetFlyOverBorderColor()
    Data.i @ReadPrefs()
    Data.i @WritePrefs()
    Data.i @Free()
    END_METHODS:
  EndDataSection

  EnableDebugger
  
EndModule

; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
; <<<<< Code generated in : 00.001 seconds (298000.00 lines/second) <<<<<
; <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

; <<<<<<<<<<<<<<<<<<<<<<<
; <<<<< END OF FILE <<<<<
; <<<<<<<<<<<<<<<<<<<<<<<
; IDE Options = PureBasic 6.11 LTS (Linux - x64)
; Folding = -----
; EnableXP
; CompileSourceDirectory